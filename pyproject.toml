# SPDX-FileCopyrightText: 2021 Centrum Wiskunde en Informatica
#
# SPDX-License-Identifier: MPL-2.0

[project]
name = "efficient_spiking_networks"
version = "0.1.0"
description = "Efficient Spikeing Networks"
authors = [
    {name = "Michael A. Guravage", email = "guravage@literatesolutions.com"},
]
dependencies = [
    "torch>=1.13.0",
    "numpy>=1.23.4",
    "librosa>=0.9.2",
    "matplotlib>=3.7.0",
    "torchvision>=0.14.1",
    "tqdm>=4.64.1",
    "deeplake[audio]>=3.2.12",
    "loguru>=0.6.0",
    "torchaudio>=0.13.1",
]
requires-python = ">=3.10"
classifiers = [
    "Development Status :: 4 - Beta",
    "Framework :: PyTorch",
    "Intended Audience :: Developers",
]
readme = "README.md"
license = {text = "MIT"}
[project.optional-dependencies]

[build-system]
requires = ["pdm-pep517>=1.0.0"]
build-backend = "pdm.pep517.api"

[tool]

[tool.black]
line-length = 79


[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.coverage]
[tool.coverage.run]
source = ["efficient_spiking_networks"]
[tool.coverage.report]
exclude_lines = [
    ".raise_for_status()",
    "if TYPE_CHECKING:",
]

[tool.isort]
profile = "black"
skip= ["data.py","optim.py","srnn_fin.py","utils.py"]

[tool.pdm]
version = {use_scm = true}

[tool.pdm.scripts]
clean = "rm -rf dist __pypackages__"
test = "pytest ./tests"
setup.shell = "pdm install --dev && pdm run pre-commit install"
setup.help = "Setup a dev environment"
lint = "pre-commit run --all-files"

[tool.pdm.dev-dependencies]
dev = [
    "pytest>=7.2.0",
    "black>=22.10.0",
    "hypothesis>=6.56.4",
    "pre-commit>=2.20.0",
    "mypy @ git+https://github.com/python/mypy.git",  # see python/mypy issue #10633 on GitHub
    "flake8>=5.0.4",
    "ipdb>=0.13.9",
    "pylint>=2.15.5",
    "pytest-cov>=4.0.0",
    "requests>=2.28.1",
    "expecter>=0.3.0",
    "bumpver>=2022.1119",
    "autologging>=1.3.2",
    "snoop>=0.4.3",
]

[tool.bumpver]
current_version = "2022.1002-alpha"
version_pattern = "YYYY.BUILD[-TAG]"
commit_message = "bump version {old_version} -> {new_version}"
commit = true
tag = true
push = false

[tool.bumpver.file_patterns]
"pyproject.toml" = [
    'current_version = "{version}"',
]
"README.md" = [
	    "{version}",
]

"src/efficient_spiking_networks/__init__.py" = [
    '^__version__ = "{version}"$',
]

"tests/test_esn.py" = [
    'assert __version__ == "{version}"$',
]
